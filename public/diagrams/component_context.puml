@startuml Multiflexmeter_Component_Context
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

LAYOUT_WITH_LEGEND()

title Component Context Diagram - Multiflexmeter V3 Firmware

Container_Boundary(firmware, "Multiflexmeter Firmware") {
    Component(main, "Main Controller", "main.cpp", "Core event loop and orchestration")
    Component(lora_events, "LoRaWAN Event Handler", "onEvent()", "Handles LMIC events: join, TX complete, etc.")
    Component(job_scheduler, "Job Scheduler", "OS Jobs", "Schedules measurements and transmissions")
    
    Component(rom_conf, "Configuration Manager", "rom_conf.cpp", "Manages EEPROM-stored configuration")
    Component(sensors, "Sensor Interface", "sensors.cpp", "Abstracts sensor communication")
    Component(smbus, "SMBus Driver", "smbus.cpp", "I2C/SMBus protocol implementation")
    Component(board, "Board Support", "boards/*.cpp", "Board-specific initialization and pin mapping")
    Component(wdt, "Watchdog Timer", "wdt.cpp", "System reset and monitoring")
}

Component_Ext(lmic, "LMIC Library", "LoRaWAN MAC layer")
ContainerDb_Ext(eeprom, "EEPROM", "Configuration storage")
ContainerDb_Ext(sensor_module, "Sensor Module", "External measurement device")

Rel(main, job_scheduler, "Schedules jobs", "os_setCallback()")
Rel(main, lora_events, "Receives events", "Callback")
Rel(job_scheduler, sensors, "Triggers measurements", "Function call")
Rel(job_scheduler, lmic, "Sends data", "LMIC_setTxData2()")
Rel(lora_events, rom_conf, "Reads config", "conf_get*()")
Rel(lora_events, job_scheduler, "Schedules next action", "os_setCallback()")
Rel(sensors, smbus, "Communicates via I2C", "smbus_*()")
Rel(smbus, sensor_module, "Reads/writes", "I2C protocol")
Rel(rom_conf, eeprom, "Reads/writes", "EEPROM API")
Rel(board, main, "Initializes hardware", "board_setup()")
Rel(main, wdt, "Monitors system", "wdt_enable()")

@enduml
