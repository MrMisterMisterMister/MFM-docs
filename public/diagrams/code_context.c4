specification {
  element system
  element container
  element component
  element function
}

model {
  mfm = system 'Multiflexmeter V3.7.0' {
    
    application = container 'Application Firmware' {
      
      eventHandler = component 'Event Handler' {
        description 'LMIC event processing'

        setup = function 'setup()' {
          description 'Initializes hardware, loads EEPROM credentials, configures LMIC, starts OTAA join'
        }

        loop = function 'loop()' {
          description 'Executes LMIC scheduler via os_runloop_once() to process jobs and events'
        }

        onEvent = function 'onEvent()' {
          description 'Handles LMIC events: EV_JOINED, EV_TXCOMPLETE, EV_RXCOMPLETE, EV_JOIN_FAILED'
        }
      }

      measurementMgr = component 'Measurement Manager' {
        description 'Sensor measurement orchestration'

        doMeasure = function 'do_measure()' {
          description 'LMIC job function that triggers sensor, waits 5s, reads data, schedules transmission'
        }

        doSend = function 'do_send()' {
          description 'LMIC job function that transmits sensor data via LMIC_setTxData2()'
        }
      }

      sensorInterface = component 'Sensor Interface' {
        description 'SMBus communication'

        sensorRead = function 'sensorRead()' {
          description 'Implements SMBus protocol: CMD_PERFORM (0x00) trigger, 5s delay, CMD_READ (0x01) to get 8  int16_t'
        }
      }

      configMgr = component 'Config Manager' {
        description 'Credential management'

        romReadCred = function 'rom_read_cred()' {
          description 'Reads DevEUI, AppEUI, AppKey from EEPROM addresses 0x0A, 0x12, 0x1A'
        }
      }
    }

    lmic = container 'LMIC Stack'
  }

  mfm.application.eventHandler.setup -> mfm.application.configMgr.romReadCred 'Loads credentials'
  mfm.application.eventHandler.setup -> mfm.lmic 'Initializes LMIC and starts join'
  
  mfm.application.eventHandler.loop -> mfm.lmic 'Runs LMIC scheduler'
  
  mfm.application.eventHandler.onEvent -> mfm.lmic 'Receives events'
  mfm.application.eventHandler.onEvent -> mfm.application.measurementMgr.doMeasure 'Schedules measurement on join'
  
  mfm.application.measurementMgr.doMeasure -> mfm.application.sensorInterface.sensorRead 'Reads sensor'
  mfm.application.measurementMgr.doMeasure -> mfm.application.measurementMgr.doSend 'Schedules transmission'
  
  mfm.application.measurementMgr.doSend -> mfm.lmic 'Queues uplink message'
}

views {
  view code_context {
    title 'Code Context - Key Functions'
    include mfm.application.*.*
    include mfm.lmic
  }
}
